plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'groovy'
    id 'war'
}

group = 'com.recipe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "11"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // jitpack.io를 저장소로 추가
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring Boot Starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation 'javax.servlet:jstl'

    // Security, Authentication
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'org.jsoup:jsoup:1.13.1'

    // firebase sdk
    implementation 'com.google.firebase:firebase-admin:6.8.1'

    // okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    implementation 'org.json:json:20171018'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

//    //HeaderRequestInterceptor
//    compile group: 'org.springframework', name: 'spring-web', version: '4.1.9.RELEASE'

    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.25.0'
    compile group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev212-1.25.0'
    compile("com.google.oauth-client:google-oauth-client-jetty:1.25.0") {
        exclude group: 'org.mortbay.jetty', module: 'servlet-api'
    }
    compile group: 'com.google.http-client', name: 'google-http-client-jackson2', version: '1.25.0'
    compile group: 'com.google.collections', name: 'google-collections', version: '1.0'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    // Spock
    testImplementation 'org.spockframework.spock:spock-core:spock-2.3'
    testImplementation 'org.spockframework.spock:spock-spring:spock-2.3'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

test {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}